language: minimal
sudo: required
services:
  - docker
cache:
  directories:
  - docker_images
  - priv/plts
env:
  global:
    - secure: "JxUav1AwYDzH/Xb/uQ9NNA+JAxw0o04CmCUEJ2aA4/p853XnO38EqeF2+Cird55bGax/TQNFXa+6VHir+nx/mwh3wYY2SZzPOq8rH4y22jmGY8WwJCD12WTzr8yDDtph/GUE80LzhGMB8280SMB2AclegcM7PR6GRN4o6mhRI5d/EGAIfiraVB8sCt4TX56nFMSoKm+e3Qlhnh+Y+pwXgMVy0i7UQ1pQJT74wP+P5qqrysN6DW7OAc1Ip8UpVs6uFqzOm2WFTLTashKSk9FwsN7Fu1MkBJqKSGcYKTlozTEN2WGvtmmQ3Gci3LXFfxVd7SBj9ku8G905RE0GVRE3ONnX+dYhZ5G/egOtBe0uVae8iqW9Qbi6wECJFx6XpqNlCFFYLeySbK2XDw7lyllxcwxYIQJihmb/U6NdEfCF8127QQpTGVz4TETep1Yuc5PJybcgVRAoCQeVNJFVGzXFq1iueNgPSvPdTJDy7QBExCZo6PqfvLb+rJxBJHlbbujkVYXBd0BE7OJQcIjZKwgU4wlAbvUUiK4CcVN5SvbdDP0jzQY+U1zG08/dbpRE7YBqxp3UpqsHD8CojTMecpMZNxXKEZVlcbPtbhiKxWCjM3mDANHYsGd6FhMG/RbOG3AQWdHBQ1Ba+nE//cVCuvONUv0wKR+5kPHmCXv9HvPAn7Y=" # DOCKER_USER
    - secure: "WSWuHqfxZ3/CcH0Pe5meOo6rk+Kb7ChsZVLspWQWZa/9N1oDkUFJZ+QSOdjLKj4m3oDvYfZimDXgl+AZSnoLLXpN1fugAV7FMgSdmXmDSx7DUj8wf+mc3NOx/IfLAVEVysTP3W2FS+W3ZOOyDuq9tdtxwXTI14KY0F9xCinfvcmatEepfdHT1dQiZLxAMMxTp2Z3WqoOyGeSbn7PV5fplrB7rIHXgvTCIvt+HPa2aCVa4CRfnyAl9ZLZjkwKUdjw0c13UeMsA7LdB3TnMApn26jEP9vpPdnicYfwSdS2bDI2ksQ/trY5/ZpsRn3jZJOSoUXlgMOloYDvDMvv6FQi9kC1j8xV6kHgYAetUmCUzV9bc4Dg+jUGd6MofAUafhPTgmUzjKNORoxKmXlSpg4Hxpyl/s3SJR6GjFJPKDmceUqhwLFfKOVaRHW2e2tVgK2YQ5xrcpD3OqJJiGToWDx9FreXVj5Lrx3t9l+bUKVBGjl5s0HTNaxeMm+ZWjTsomeIpQmanTrK/Y6AOAOkkjKRC9kl+tsY3806eQJ+4tdv8xa7/vMVrXSj4wWbd/jUjHNgx/XkDff6oeebYJ3wm2UCAQpvn0YS84mlBKO7ppqBfqpzJrt+quaoWaT8UUhAqO1GhKKCCgvrTU9HY1+iPoj4YDdghus3jvTsP43ziGmeHDU=" # DOCKER_PASS
    - REPO=${TRAVIS_REPO_SLUG}
    - COMMIT=${TRAVIS_COMMIT::8}
    - TAG=${TRAVIS_TAG}
    - DOCKER_COMPOSE_VERSION=1.24.1
before_install:
  - docker load -i docker_images/images.tar || true
install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
before_script:
  - docker build -t dolfinus/arkenston-backend:base -f Dockerfile.base .
  - cp .env.travis .env.test
  - docker-compose -f docker-compose.test.yml build
script:
  - mkdir cover; chown 2000:2000 cover;
  - mkdir graphql; chown 2000:2000 graphql;
  - travis_wait docker-compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from backend_test
  - bash <(curl -s https://codecov.io/bash)
after_script:
  - docker images
before_deploy:
  - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
  - docker build -t $REPO:$COMMIT --compress -f Dockerfile.prod .
before_cache:
  - docker system prune -f
  - docker save -o docker_images/images.tar $(docker images -a -q)
deploy:
  - provider: script
    script: docker tag $REPO:$COMMIT $REPO:latest && docker push $REPO:latest
    on:
      branch: master
      tags: true
  - provider: script
    script: docker tag $REPO:$COMMIT $REPO:$TAG && docker push $REPO:$TAG
    on:
      branch: master
      tags: true
  - provider: release
    api_key: "GITHUB OAUTH TOKEN"
    file_glob: true
    file:
      - graphql/*.json
      - graphql/*.graphql
    skip_cleanup: true
    overwrite: true
    on:
      tags: true